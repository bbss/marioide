["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$clojure.browser.net","~:imports",["^ ","~$XhrIo","~$goog.net.XhrIo","~$EventType","~$goog.net.EventType","~$WebSocket","~$goog.net.WebSocket","~$CfgFields","~$goog.net.xpc.CfgFields","~$CrossPageChannel","~$goog.net.xpc.CrossPageChannel","~$Uri","~$goog.Uri"],"~:requires",["^ ","^B","^C","^<","^=","^:","^;","~$goog.json","^E","^>","^?","~$gjson","^E","^8","^9","~$event","~$clojure.browser.event","^@","^A","^H","^H"],"~:uses",null,"~:defs",["^ ","~$xpc-config-fields",["^ ","^5","~$clojure.browser.net/xpc-config-fields","~:file","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","~:line",73,"~:column",1,"~:end-line",73,"~:end-column",23,"~:meta",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",73,"^O",6,"^P",73,"^Q",23]],"~$xhr-connection",["^ ","~:protocol-inline",null,"^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",81,"^O",7,"^P",81,"^Q",21,"~:arglists",["~#list",["~$quote",["^V",[[]]]]],"~:doc","Returns an XhrIo connection"],"^5","~$clojure.browser.net/xhr-connection","~:variadic",false,"^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",21,"~:method-params",["^V",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^O",1,"^N",81,"^P",81,"~:max-fixed-arity",0,"~:fn-var",true,"^U",["^V",["^W",["^V",[[]]]]],"^X","Returns an XhrIo connection"],"~$xpc-connection",["^ ","^T",null,"^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",116,"^O",7,"^P",116,"^Q",21,"^U",["^V",["^W",["^V",[[],["~$config"]]]]],"^X","When passed with a config hash-map, returns a parent\n  CrossPageChannel object. Keys in the config hash map are downcased\n  versions of the goog.net.xpc.CfgFields enum keys,\n  e.g. goog.net.xpc.CfgFields.PEER_URI becomes :peer_uri in the config\n  hash.\n\n  When passed with no args, creates a child CrossPageChannel object,\n  and the config is automatically taken from the URL param 'xpc', as\n  per the CrossPageChannel API.","~:top-fn",["^ ","^Z",false,"^12",1,"^[",["^V",[[],["^15"]]],"^U",["^V",[[],["^15"]]],"^11",["^V",[null,null]]]],"^5","~$clojure.browser.net/xpc-connection","^Z",false,"^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",21,"^16",["^ ","^Z",false,"^12",1,"^[",["^V",[[],["^15"]]],"^U",["^V",[[],["^15"]]],"^11",["^V",[null,null]]],"^[",["^V",[[],["^15"]]],"^10",null,"^11",["^V",[null,null]],"^O",1,"^N",116,"^P",116,"^12",1,"^13",true,"^U",["^V",[[],["^15"]]],"^X","When passed with a config hash-map, returns a parent\n  CrossPageChannel object. Keys in the config hash map are downcased\n  versions of the goog.net.xpc.CfgFields enum keys,\n  e.g. goog.net.xpc.CfgFields.PEER_URI becomes :peer_uri in the config\n  hash.\n\n  When passed with no args, creates a child CrossPageChannel object,\n  and the config is automatically taken from the URL param 'xpc', as\n  per the CrossPageChannel API."],"~$ICrossPageChannel",["^ ","^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",86,"^O",14,"^P",86,"^Q",31,"^X",null,"~:protocol-symbol",true,"~:jsdoc",["^V",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$register-service",[["~$this","~$service-name","~$fn"],["^1>","^1?","^1@","~$encode-json?"]]]]],"^19",true,"^5","~$clojure.browser.net/ICrossPageChannel","^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",31,"^O",1,"^N",86,"^1;",["^ ","^1<",["^ ","^1=",[["^1>","^1?","^1@"],["^1>","^1?","^1@","^1A"]]]],"~:info",null,"^P",86,"~:impls",["^4",["~$goog/net.xpc.CrossPageChannel"]],"^X",null,"^1:",["^V",["@interface"]]],"~$IWebSocket",["^ ","^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",143,"^O",14,"^P",143,"^Q",24,"^X",null,"^19",true,"^1:",["^V",["@interface"]],"^1;",["^ ","^1<",["^ ","~$open?",[["^1>"]]]]],"^19",true,"^5","~$clojure.browser.net/IWebSocket","^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",24,"^O",1,"^N",143,"^1;",["^ ","^1<",["^ ","^1G",[["^1>"]]]],"^1C",null,"^P",143,"^1D",["^4",["~$goog/net.WebSocket"]],"^X",null,"^1:",["^V",["@interface"]]],"~$*timeout*",["^ ","^5","~$clojure.browser.net/*timeout*","^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",19,"^O",1,"^P",19,"^Q",15,"^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",19,"^O",6,"^P",19,"^Q",15]],"~$connect",["^ ","^T",null,"^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",31,"^O",4,"^P",31,"^Q",11,"~:protocol","~$clojure.browser.net/IConnection","^X",null,"^U",["^V",["^W",["^V",[["^1>"],["^1>","~$opt1"],["^1>","^1O","~$opt2"],["^1>","^1O","^1P","~$opt3"]]]]],"^16",["^ ","^Z",false,"^12",4,"^[",["^V",[["^1>"],["^1>","^1O"],["^1>","^1O","^1P"],["^1>","^1O","^1P","^1Q"]]],"^U",["^V",[["^1>"],["^1>","^1O"],["^1>","^1O","^1P"],["^1>","^1O","^1P","^1Q"]]],"^11",["^V",[null,null,null,null]]]],"^1M","^1N","^5","~$clojure.browser.net/connect","^Z",false,"^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",11,"^16",["^ ","^Z",false,"^12",4,"^[",["^V",[["^1>"],["^1>","^1O"],["^1>","^1O","^1P"],["^1>","^1O","^1P","^1Q"]]],"^U",["^V",[["^1>"],["^1>","^1O"],["^1>","^1O","^1P"],["^1>","^1O","^1P","^1Q"]]],"^11",["^V",[null,null,null,null]]],"^[",["^V",[["^1>"],["^1>","^1O"],["^1>","^1O","^1P"],["^1>","^1O","^1P","^1Q"]]],"^10",null,"^11",["^V",[null,null,null,null]],"^O",1,"^N",30,"^P",31,"^12",4,"^13",true,"^U",["^V",[["^1>"],["^1>","^1O"],["^1>","^1O","^1P"],["^1>","^1O","^1P","^1Q"]]],"^X",null],"~$event-types",["^ ","^5","~$clojure.browser.net/event-types","^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",21,"^O",1,"^P",21,"^Q",17,"^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",21,"^O",6,"^P",21,"^Q",17]],"~$websocket-connection",["^ ","^T",null,"^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",174,"^O",7,"^P",174,"^Q",27,"^U",["^V",["^W",["^V",[[],["~$auto-reconnect?"],["^1V","~$next-reconnect-fn"]]]]],"^16",["^ ","^Z",false,"^12",2,"^[",["^V",[[],["^1V"],["^1V","^1W"]]],"^U",["^V",[[],["^1V"],["^1V","^1W"]]],"^11",["^V",[null,null,null]]]],"^5","~$clojure.browser.net/websocket-connection","^Z",false,"^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",27,"^16",["^ ","^Z",false,"^12",2,"^[",["^V",[[],["^1V"],["^1V","^1W"]]],"^U",["^V",[[],["^1V"],["^1V","^1W"]]],"^11",["^V",[null,null,null]]],"^[",["^V",[[],["^1V"],["^1V","^1W"]]],"^10",null,"^11",["^V",[null,null,null]],"^O",1,"^N",174,"^P",174,"^12",2,"^13",true,"^U",["^V",[[],["^1V"],["^1V","^1W"]]]],"~$close",["^ ","^T",null,"^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",42,"^O",4,"^P",42,"^Q",9,"^1M","^1N","^X",null,"^U",["^V",["^W",["^V",[["^1>"]]]]]],"^1M","^1N","^5","~$clojure.browser.net/close","^Z",false,"^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",9,"^[",["^V",[["^1>"]]],"^10",null,"^11",["^V",[null,null]],"^O",1,"^N",30,"^P",42,"^12",1,"^13",true,"^U",["^V",["^W",["^V",[["^1>"]]]]],"^X",null],"^1=",["^ ","^T",null,"^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",87,"^O",4,"^P",87,"^Q",20,"^1M","^1B","^X",null,"^U",["^V",["^W",["^V",[["^1>","^1?","^1@"],["^1>","^1?","^1@","^1A"]]]]],"^16",["^ ","^Z",false,"^12",4,"^[",["^V",[["^1>","^1?","^1@"],["^1>","^1?","^1@","^1A"]]],"^U",["^V",[["^1>","^1?","^1@"],["^1>","^1?","^1@","^1A"]]],"^11",["^V",[null,null]]]],"^1M","^1B","^5","~$clojure.browser.net/register-service","^Z",false,"^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",20,"^16",["^ ","^Z",false,"^12",4,"^[",["^V",[["^1>","^1?","^1@"],["^1>","^1?","^1@","^1A"]]],"^U",["^V",[["^1>","^1?","^1@"],["^1>","^1?","^1@","^1A"]]],"^11",["^V",[null,null]]],"^[",["^V",[["^1>","^1?","^1@"],["^1>","^1?","^1@","^1A"]]],"^10",null,"^11",["^V",[null,null]],"^O",1,"^N",86,"^P",87,"^12",4,"^13",true,"^U",["^V",[["^1>","^1?","^1@"],["^1>","^1?","^1@","^1A"]]],"^X",null],"~$IConnection",["^ ","^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",30,"^O",14,"^P",30,"^Q",25,"^X",null,"^19",true,"^1:",["^V",["@interface"]],"^1;",["^ ","^1<",["^ ","^1L",[["^1>"],["^1>","^1O"],["^1>","^1O","^1P"],["^1>","^1O","^1P","^1Q"]],"~$transmit",[["^1>","~$opt"],["^1>","^22","^1P"],["^1>","^22","^1P","^1Q"],["^1>","^22","^1P","^1Q","~$opt4"],["^1>","^22","^1P","^1Q","^23","~$opt5"]],"^1Y",[["^1>"]]]]],"^19",true,"^5","^1N","^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",25,"^O",1,"^N",30,"^1;",["^ ","^1<",["^ ","^1L",[["^1>"],["^1>","^1O"],["^1>","^1O","^1P"],["^1>","^1O","^1P","^1Q"]],"^21",[["^1>","^22"],["^1>","^22","^1P"],["^1>","^22","^1P","^1Q"],["^1>","^22","^1P","^1Q","^23"],["^1>","^22","^1P","^1Q","^23","^24"]],"^1Y",[["^1>"]]]],"^1C",null,"^P",30,"^1D",["^4",["^1E","^1I","~$goog/net.XhrIo"]],"^X",null,"^1:",["^V",["@interface"]]],"^1G",["^ ","^T",null,"^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",144,"^O",4,"^P",144,"^Q",9,"^1M","^1H","^X",null,"^U",["^V",["^W",["^V",[["^1>"]]]]]],"^1M","^1H","^5","~$clojure.browser.net/open?","^Z",false,"^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",9,"^[",["^V",[["^1>"]]],"^10",null,"^11",["^V",[null,null]],"^O",1,"^N",143,"^P",144,"^12",1,"^13",true,"^U",["^V",["^W",["^V",[["^1>"]]]]],"^X",null],"^21",["^ ","^T",null,"^R",["^ ","^M","/Users/bb/speech/resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^N",36,"^O",4,"^P",36,"^Q",12,"^1M","^1N","^X",null,"^U",["^V",["^W",["^V",[["^1>","^22"],["^1>","^22","^1P"],["^1>","^22","^1P","^1Q"],["^1>","^22","^1P","^1Q","^23"],["^1>","^22","^1P","^1Q","^23","^24"]]]]],"^16",["^ ","^Z",false,"^12",6,"^[",["^V",[["^1>","^22"],["^1>","^22","^1P"],["^1>","^22","^1P","^1Q"],["^1>","^22","^1P","^1Q","^23"],["^1>","^22","^1P","^1Q","^23","^24"]]],"^U",["^V",[["^1>","^22"],["^1>","^22","^1P"],["^1>","^22","^1P","^1Q"],["^1>","^22","^1P","^1Q","^23"],["^1>","^22","^1P","^1Q","^23","^24"]]],"^11",["^V",[null,null,null,null,null]]]],"^1M","^1N","^5","~$clojure.browser.net/transmit","^Z",false,"^M","resources/public/js/compiled/devcards_out/clojure/browser/net.cljs","^Q",12,"^16",["^ ","^Z",false,"^12",6,"^[",["^V",[["^1>","^22"],["^1>","^22","^1P"],["^1>","^22","^1P","^1Q"],["^1>","^22","^1P","^1Q","^23"],["^1>","^22","^1P","^1Q","^23","^24"]]],"^U",["^V",[["^1>","^22"],["^1>","^22","^1P"],["^1>","^22","^1P","^1Q"],["^1>","^22","^1P","^1Q","^23"],["^1>","^22","^1P","^1Q","^23","^24"]]],"^11",["^V",[null,null,null,null,null]]],"^[",["^V",[["^1>","^22"],["^1>","^22","^1P"],["^1>","^22","^1P","^1Q"],["^1>","^22","^1P","^1Q","^23"],["^1>","^22","^1P","^1Q","^23","^24"]]],"^10",null,"^11",["^V",[null,null,null,null,null]],"^O",1,"^N",30,"^P",36,"^12",6,"^13",true,"^U",["^V",[["^1>","^22"],["^1>","^22","^1P"],["^1>","^22","^1P","^1Q"],["^1>","^22","^1P","^1Q","^23"],["^1>","^22","^1P","^1Q","^23","^24"]]],"^X",null]],"~:require-macros",null,"^X","Network communication library, wrapping goog.net.\nIncludes a common API over XhrIo, CrossPageChannel, and Websockets."]